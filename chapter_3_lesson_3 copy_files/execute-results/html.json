{
  "hash": "5449dd8e5631943f1f5d6674d0e10426",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Holt-Winters Method (Additive Model)\"\nsubtitle: \"Chapter 3: Lesson 3\"\nformat: html\neditor: source\nsidebar: false\n---\n\n\n\n```{=html}\n<script type=\"text/javascript\">\n function showhide(id) {\n    var e = document.getElementById(id);\n    e.style.display = (e.style.display == 'block') ? 'none' : 'block';\n }\n \n function openTab(evt, tabName) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n        tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(tabName).style.display = \"block\";\n    evt.currentTarget.className += \" active\";\n }    \n</script>\n```\n\n\n## Learning Outcomes\n\n<details>\n\n<summary>Implement the Holt-Winter method to forecast time series</summary>\n\n-   Justify the need for the Holt-Winters method of exponential smoothing\n-   Describe how to obtain initial parameters for the Holt-Winters algorithm\n-   Explain the Holt-Winters method equations for additive decomposition models\n-   Explain the purpose of the paramters $\\alpha$, $\\beta$, and $\\gamma$\n-   Interpret the coefficient estimates $a_t$, $b_t$, and $s_t$ of the Holt-Winters smoothing algorithm\n-   Explain the Holt-Winters forecasting equation for additive decomposition models, Equation (3.22)\n-   Use HoltWinters() to forecast additive model time series\n-   Plot the Holt-Winters decomposition of a TS (see Fig 3.10)\n-   Plot the Holt-Winters fitted values versus the original time series (see Fig 3.11)\n-   Superimpose plots of the Holt-Winters predictions with the time series realizations (see Fig 3.13)\n\n</details>\n\n\n\n\n\n\n\n## Introduction to the Holt-Winters Method (Additive Model)\n\n### From EWMA to Holt-Winters\n\n#### Simple Exponential Smoothing (EWMA)\n\nThe exponential weighted moving average (EWMA) is a simple method for smoothing (or filtering) a time series. We update the estimate of the level of the time series as:\n\n$$\n  a_t = \\alpha x_t + (1-\\alpha) a_{t-1}\n$$\n\nwhere $a_t$ is the estimate of the level of the time series at time $t$ and $0 \\le \\alpha \\le 1$ is the smoothing paramter.\n\nThis is known as the *level update equation*, because at each time step, we can update our estimate of the level (or the center) of the time series. \nIt is called exponential smoothing, because at each preceding value has exponentially decreasing influence on the estimate.\n\n<!-- Check Your Understanding -->\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n-   Explain the level update equation to your partner.\n\n:::\n\nThese computations are based on previous values and $a_1 = x_1$. The number $0 \\le \\alpha \\le 1$ is a smoothing parameter. This determines how much weight is given to previous values when creating the updated level estimate.\n\nIf you were to use this model for forecasting, you would not be able to consider any trend or seasonality in the forecast. Hence, the future values would all be forecasted as the last value of $a_n$:\n\n$$\n  \\hat x_{n+k|n} = a_n\n$$\nwhere $\\hat x_{n+k \\mid n}$ is the estimate of the time series $k$ time units in the future past time $t=n$.\nFrankly, this is not very useful, because many time series have trends or seasonality.\n\n#### Holt's Exponential Smoothing\n\nIn 1957, Charles Holt published a new procedure that introduced a trend into this model. The forecasted values were:\n\n$$\n  \\hat x_{n+k|n} = a_n + k b_n\n$$\n\nwhere $b_n$ is the slope indicating how much the time series changes on average from one time point to another and $k$ is the number of time periods past $t=n$ you are forecasting.\n\nThe slope update equation is:\n\n$$\n  b_t = \\beta \\left( a_t - a_{t-1} \\right) + (1-\\beta) b_{n-1}\n$$\n\nwhere $0 \\le \\beta \\le 1$ is a smoothing parameter, $b_t$ is the slope estimate at time $t$, and $a_t$ is the estimate of the level of the time series at time $t$.\n\n\n<!-- Check Your Understanding -->\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n-   Explain the slope update equation to your partner.\n\n:::\n\n#### Winter's Exponential Smoothing (Holt-Winters Filtering)\n\nPeter Winters was a colleague of Holt's at the Carnagie Institute of Technology. In 1960, he publised a revision of Winters' technique that allowed for seasonal variation. This is known as the *Holt-Winters Method* or *Holt-Winters Filtering*. The forecasting equation is:\n\n$$\n  \\hat x_{n+k|n} = a_n + k b_n + s_{n+k-p}\n$$\n\nwhere $\\hat x_{n+k|n}$ is the forecasted value of the time series $k$ units in the future after time $t=n$, and the time series is assumed to have seasonality with a period of $p$ time units; $a_n$ is the level of the time series at time $t=n$; $b_n$ is the slope of the time series at time $t=n$; and $s_{n+k-p}$ is the estimated seasonal component at time $t=n+k$. Note that we must look back one full period to get the estimated seasonal component.\n\nWe will practice forecasting, before we discuss how to get the values of $a_t$, $b_t$, and $s_t$.\n\nThe Holt-Winters method was applied to the chocolate search data. This table summarizes the results for the last few values of the time series.\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n\n-   Explain the slope update equation to your partner.\n\n:::\n\nThe Holt-Winters method provides a way to model a time series in which we consider the time series in layers. first, there is the level (the smoothed $x_t$ values from the time series) at time $t$. We will denote the *level* by $a_t$. The level can change from time to time.\nWe introduce a value $b_n$, which we call the *slope*. This is the change in the level of the series from one time period to another. (As the book points out, R and many textbooks call the slope the *trend*.) \nFinally, we include a seasonal estimate, $s_t$, which indicates how much the time series rises or falls above the level and trend values at time $t$.\n\nTo visualize these terms, it can be helpful to consider the forecasting model. Suppose we have computed that Holt-Winters estimate of a time series with $n$ observations. In other words, we have just fit a curve to the entire time series. \nWe will use a very simple time series for this illustration. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nholt_winters_additive_forecast <- function(data, alpha = 0.2, beta = 0.2, gamma = 0.2, p = 12, a1 = NULL, b1 = NULL, s1 = NULL) {\n  # Assuming 'data' is a tsibble with a column 'value'\n  data <- data %>%\n    mutate(month = month(date))\n  \n  at <- numeric(nrow(data))\n  bt <- numeric(nrow(data))\n  st <- numeric(nrow(data))\n  \n  at[1] <- ifelse(!is.null(a1), a1, data$value[1]) \n  bt[1] <- ifelse(!is.null(b1), b1, (1 / p) * mean( data$value[(p+1):(2*p)] - data$value[1:p] )) \n  st[1:p] <- ifelse(!is.null(s1), s1, 0)\n  \n  # First cycle\n  for (t in 2:p) {\n    at[t] <- alpha * (data$value[t] - st[t - 0 * p ]) + (1 - alpha) * (at[t - 1] + bt[t - 1])\n    bt[t] <- beta * (at[t] - at[t - 1]) + (1 - beta) * bt[t - 1]\n  }\n  \n  for (t in (p + 1):nrow(data)) {\n    at[t] <- alpha * (data$value[t] - st[t - p]) + (1 - alpha) * (at[t - 1] + bt[t - 1])\n    bt[t] <- beta * (at[t] - at[t - 1]) + (1 - beta) * bt[t - 1]\n    st[t] <- gamma * (data$value[t] - at[t]) + (1 - gamma) * st[t - p]\n  }\n  \n  data <- data %>%\n    mutate(estimated_level = at, estimated_slope = bt, estimated_seasonal = st)\n  \n  data %>% return()\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nholt_winters_additive_plot <- function(data) {\n# Plot 1: Just 'data$estimated_level'\n  plot_at <- ggplot(data, aes(x = date, y = estimated_level)) +\n    geom_line(color = \"blue\", size = 1) +\n    labs(\n      x = \"Date\",\n      y = \"Level (at)\",\n      title = NULL\n    ) +\n    theme_minimal()\n\n  # Plot 2: Just 'data$estimated_slope'\n  plot_bt <- ggplot(data, aes(x = date, y = estimated_slope)) +\n    geom_line(color = \"red\", size = 1) +\n    labs(\n      x = \"Date\",\n      y = \"Slope (bt)\",\n      title = NULL\n    ) +\n    theme_minimal()\n\n  # Plot 3: Just 'data$estimated_seasonal'\n  plot_st <- ggplot(data, aes(x = date, y = estimated_seasonal)) +\n    geom_line(color = \"green\", size = 1) +\n    labs(\n      x = \"Date\",\n      y = \"Seasonal (st)\",\n      title = NULL\n    ) +\n    theme_minimal()\n\n  # Plot 4: Original trendline with 'data$estimated_level'\n  plot_combined <- ggplot(data, aes(x = date)) +\n    geom_line(aes(y = value), color = \"black\", size = 1) +\n    geom_line(aes(y = estimated_level, color = \"Combined\", alpha=0.5), size = 1) +\n    labs(\n      x = \"Date\",\n      y = \"Value\",\n      title = NULL,\n      color = \"Components\"\n    ) +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n\n  return(list(plot_at, plot_bt, plot_st, plot_combined))\n}\n```\n:::\n\n\n\n#### This is the right one\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- function(t) { 100 }\nb <- function(t) { 1/2 }\ns <- function(t) { (t %% 4 == 2) * 3 }\nx <- function(t) { a(t) + (t-1) * b(t) + s(t) }\nn_months <- 36\nmax_k <- 16\n\nstart_date <- my(paste(1, floor(year(now())-n_months/12)))\ndate_seq <- seq(start_date,\n    start_date + months(n_months - 1),\n    by = \"1 months\")\ndate_seq\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"2021-01-01\" \"2021-02-01\" \"2021-03-01\" \"2021-04-01\" \"2021-05-01\"\n [6] \"2021-06-01\" \"2021-07-01\" \"2021-08-01\" \"2021-09-01\" \"2021-10-01\"\n[11] \"2021-11-01\" \"2021-12-01\" \"2022-01-01\" \"2022-02-01\" \"2022-03-01\"\n[16] \"2022-04-01\" \"2022-05-01\" \"2022-06-01\" \"2022-07-01\" \"2022-08-01\"\n[21] \"2022-09-01\" \"2022-10-01\" \"2022-11-01\" \"2022-12-01\" \"2023-01-01\"\n[26] \"2023-02-01\" \"2023-03-01\" \"2023-04-01\" \"2023-05-01\" \"2023-06-01\"\n[31] \"2023-07-01\" \"2023-08-01\" \"2023-09-01\" \"2023-10-01\" \"2023-11-01\"\n[36] \"2023-12-01\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntemp_ts <- data.frame(date = yearmonth(date_seq), value = x(1:n_months)) |>\n  as_tsibble(index = date)\ntemp_ts |>\n  autoplot(.vars = value)\n```\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntemp1 <- holt_winters_additive_forecast(temp_ts, alpha = 0.2, beta = 0.2, gamma = 0.2, p = 4, s1 = 0)\n\n\nstart_date <- ym(max(temp1$date)) + months(1)\ndate_seq <- seq(start_date,\n    start_date + months(max_k - 1),\n    by = \"1 months\")\ndate_seq\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"2024-01-01\" \"2024-02-01\" \"2024-03-01\" \"2024-04-01\" \"2024-05-01\"\n [6] \"2024-06-01\" \"2024-07-01\" \"2024-08-01\" \"2024-09-01\" \"2024-10-01\"\n[11] \"2024-11-01\" \"2024-12-01\" \"2025-01-01\" \"2025-02-01\" \"2025-03-01\"\n[16] \"2025-04-01\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntail1 <- temp1 %>% mutate(n = row_number()) %>% tail(1)\nan <- tail1$estimated_level[1]\nbn <- tail1$estimated_slope[1]\nn <- tail1$n[1]\n\ntemp2 <- temp1 %>% \n  bind_rows(data.frame(date = date_seq, value = NA, month = NA, estimated_level = NA, estimated_slope = NA, estimated_seasonal = NA)) %>% \n  mutate(forecast = as.numeric(NA))\n\ntemp2$forecast[n] <- temp2$estimated_level[n] + temp2$estimated_seasonal[n]\n\nfor (k in (n+1):(n+max_k)) {\n  temp2$estimated_seasonal[k] <- temp2$estimated_seasonal[k - 4] ######### MAGIC NUMBER: 4 periods per cycle\n  temp2$forecast[k] <- an + (k - n) * bn + temp2$estimated_seasonal[k]\n}\n\nggplot(temp2, aes(x = date)) +\n    geom_line(aes(y = value), color = \"black\", size = 1) +\n    geom_line(aes(y = estimated_level + estimated_seasonal, color = \"Combined\", alpha=0.5), size = 1) +\n    geom_line(aes(y = forecast, color = \"Combined\", alpha=0.5), linetype = \"dashed\", size = 1) +\n    labs(\n      x = \"Date\",\n      y = \"Value\",\n      title = NULL,\n      color = \"Components\"\n    ) +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n# David Code to Make Function\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_data <- function(n_months = 36, start_month = now()) {\n  a <- function(t) { 100 }\n  b <- function(t) { 1/2 }\n  s <- function(t) { (t %% 4 == 2) * 3 }\n  x <- function(t) { a(t) + (t-1) * b(t) + s(t) }\n\n  start_date <- my(paste(1, floor(year(start_month)-n_months/12)))\n  date_seq <- seq(start_date, start_date + months(n_months - 1), by = \"1 months\")\n\n  temp_ts <- data.frame(date = yearmonth(date_seq), value = x(1:n_months)) |>\n    as_tsibble(index = date)\n\n  return(temp_ts)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_with_forecast <- function(temp_ts, forecast = FALSE, alpha = 0.2, beta = 0.2, gamma = 0.2, p = 4, s1 = 0) {\n  temp1 <- holt_winters_additive_forecast(temp_ts, alpha = alpha, beta = beta, gamma = gamma, p = p, s1 = s1)\n\n  start_date <- ym(max(temp1$date)) + months(1)\n  date_seq <- seq(start_date, start_date + months(16 - 1), by = \"1 months\")\n\n  tail1 <- temp1 %>% mutate(n = row_number()) %>% tail(1)\n  an <- tail1$estimated_level[1]\n  bn <- tail1$estimated_slope[1]\n  n <- tail1$n[1]\n\n  temp2 <- temp1 %>% \n    bind_rows(data.frame(date = date_seq, value = NA, month = NA, estimated_level = NA, estimated_slope = NA, estimated_seasonal = NA)) %>% \n    mutate(forecast = as.numeric(NA))\n\n  temp2$forecast[n] <- temp2$estimated_level[n] + temp2$estimated_seasonal[n]\n\n  for (k in (n+1):(n+16)) {\n    temp2$estimated_seasonal[k] <- temp2$estimated_seasonal[k - 4]\n    temp2$forecast[k] <- an + (k - n) * bn + temp2$estimated_seasonal[k]\n  }\n\n  if (forecast) {\n    ggplot(temp2, aes(x = date)) +\n      geom_line(aes(y = value), color = \"black\", size = 1) +\n      geom_line(aes(y = estimated_level + estimated_seasonal, color = \"Combined\", alpha=0.5), size = 1) +\n      geom_line(aes(y = forecast, color = \"Combined\", alpha=0.5), linetype = \"dashed\", size = 1) +\n      labs(\n        x = \"Date\",\n        y = \"Value\",\n        title = NULL,\n        color = \"Components\"\n      ) +\n      theme_minimal() +\n      theme(legend.position = \"none\")\n  } else {\n    ggplot(temp2, aes(x = date)) +\n      geom_line(aes(y = value), color = \"black\", size = 1) +\n      labs(\n        x = \"Date\",\n        y = \"Value\",\n        title = NULL\n      ) +\n      theme_minimal()\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_with_forecast(generate_data(), forecast = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 16 rows containing missing values (`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_with_forecast(generate_data(), forecast = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 16 rows containing missing values (`geom_line()`).\nRemoved 16 rows containing missing values (`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 35 rows containing missing values (`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 36 x 6 [1M]\n       date value month estimated_level estimated_slope estimated_seasonal\n      <mth> <dbl> <dbl>           <dbl>           <dbl>              <dbl>\n 1 2021 Jan  100      1            100            0.5               0     \n 2 2021 Feb  104.     2            101.           0.620             0     \n 3 2021 Mar  101      3            102.           0.591             0     \n 4 2021 Apr  102.     4            102.           0.565             0     \n 5 2021 May  102      5            102.           0.541            -0.0957\n 6 2021 Jun  106.     6            104.           0.640             0.397 \n 7 2021 Jul  103      7            104.           0.594            -0.185 \n 8 2021 Aug  104.     8            104.           0.553            -0.163 \n 9 2021 Sep  104      9            105.           0.522            -0.219 \n10 2021 Oct  108.    10            106.           0.597             0.696 \n# ℹ 26 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ntemp2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 52 x 7 [1D]\n   date       value month estimated_level estimated_slope estimated_seasonal\n   <date>     <dbl> <dbl>           <dbl>           <dbl>              <dbl>\n 1 2021-01-01  100      1            100            0.5               0     \n 2 2021-02-01  104.     2            101.           0.620             0     \n 3 2021-03-01  101      3            102.           0.591             0     \n 4 2021-04-01  102.     4            102.           0.565             0     \n 5 2021-05-01  102      5            102.           0.541            -0.0957\n 6 2021-06-01  106.     6            104.           0.640             0.397 \n 7 2021-07-01  103      7            104.           0.594            -0.185 \n 8 2021-08-01  104.     8            104.           0.553            -0.163 \n 9 2021-09-01  104      9            105.           0.522            -0.219 \n10 2021-10-01  108.    10            106.           0.597             0.696 \n# ℹ 42 more rows\n# ℹ 1 more variable: forecast <dbl>\n```\n\n\n:::\n:::\n\n\n\nNow, suppose we want to use this estimated curve to forecast future values of the time series.\n\n## Forecast (Additive) \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"https://byuistats.github.io/timeseries/data/baltimore_crime.csv\", \n               header=TRUE,\n               stringsAsFactors=FALSE)\nsummary_df <- df %>%\n  group_by(CrimeDate) %>%\n  summarise(\n    total_incidents = sum(Total.Incidents)\n  )\ncrime_data <- summary_df %>%\n  mutate(CrimeDate = as.Date(CrimeDate, format = \"%m/%d/%Y\")) %>% \n  arrange(CrimeDate)\ncrime_tsibble <- as_tsibble(crime_data, index = CrimeDate)\ncrime_tsibble # Uncomment to see table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 2,143 x 2 [1D]\n   CrimeDate  total_incidents\n   <date>               <int>\n 1 2011-01-01             185\n 2 2011-01-02             102\n 3 2011-01-03             106\n 4 2011-01-04             113\n 5 2011-01-05             131\n 6 2011-01-06             107\n 7 2011-01-07             150\n 8 2011-01-08             106\n 9 2011-01-09              98\n10 2011-01-10             115\n# ℹ 2,133 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Additive seasonality Model\n- **Alpha** = 0.2\n- **Beta** = 0.2\n- **Gamma** = 0.2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# holt_winters_additive_plot(crime_tsibble, alpha = 0.2, beta = 0.2, gamma = .2)\n```\n:::\n\n\n\n\\begin{align*}\n  a_t &= \\alpha \\left( x_t - s_{t-p} \\right) + (1-\\alpha) \\left( a_{t-1} + b_{t-1} \\right) \\\\\n  b_t &= \\beta \\left( a_t - a_{t-1} \\right) + (1-\\beta) b_{t-1} \\\\\n  s_t &= \\gamma \\left( x_t - a_t \\right) + (1-\\gamma) s_{t-p}\n\\end{align*}\n\n\n## Small Group Activity: Holt-Winters Model for BYU-Idaho Enrollment Data (20 min)\n\nIn Chapter 2, Lesson 3, we explored the BYU-Idaho Enrollment data. We will apply the Holt-Winters model to these data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in the data from a csv and make the tsibble\n\n# Method 1:\nenrollment_df <- rio::import(\"https://byuistats.github.io/timeseries/data/byui_enrollment.csv\")\nstart_date <- lubridate::ymd(\"2019-05-01\")\ndate_seq <- seq(start_date,\n                start_date + months(nrow(enrollment_df)-1) * 4,\n                by = \"4 months\")\nenrollment_ts <- tibble(\n    dates = tsibble::yearmonth(date_seq),\n    semester = pull(enrollment_df, semester),\n    enrollment = pull(enrollment_df, enrollment)\n  ) |>\n  dplyr::select(semester, dates, enrollment) |>\n  as_tsibble(index = dates)\n\n# Method 2:\nenrollment_ts <- rio::import(\"https://byuistats.github.io/timeseries/data/byui_enrollment.csv\") |>\n  mutate(\n    dates = yearmonth(ym(paste(year, term * 4 - 3)))\n  ) |>\n  dplyr::select(semester, dates, enrollment) |>\n  as_tsibble(index = dates) \n\n# Compute and plot the decomposition\nenrollment_decompose <- enrollment_ts |>\n    model(feasts::classical_decomposition(enrollment,\n        type = \"add\"))  |>\n    components()\nautoplot(enrollment_decompose)\n```\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ### Moving Average -->\n\n<!-- We can use the following function to compute the moving average -->\n\n<!-- ```{r} -->\n<!-- # compute moving average -->\n<!-- compute_moving_average <- function(df, variable, periods = 12) { -->\n<!--   sum <- 0 -->\n\n<!--   for (i in 1:(periods / 2)) { -->\n<!--     sum <- sum + lead(eval(substitute(variable), df), i)           # x_{t+i} -->\n<!--     sum <- sum + lag(eval(substitute(variable), df), i)            # x_{t-i} -->\n<!--   } -->\n\n<!--   sum <- sum + eval(substitute(variable), df) -->\n<!--   sum <- sum - lag(eval(substitute(variable), df), periods / 2) / 2 -->\n<!--   sum <- sum - lead(eval(substitute(variable), df), periods / 2) / 2 -->\n\n<!--   df$m_hat <- sum / periods -->\n\n<!--   return(df) -->\n<!-- } -->\n\n<!-- crime_decomposition <- crime_monthly_ts |> -->\n<!--   compute_moving_average(value) -->\n<!-- ``` -->\n\n<!-- Here are the first few rows of this new file.  -->\n<!-- ```{r} -->\n<!-- #| echo: false -->\n\n<!-- crime_decomposition |> -->\n<!--   head(13) |> -->\n<!--   display_table() -->\n<!-- ``` -->\n\n<!-- ### Estimated Monthly Multiplicative Effect -->\n\n<!-- <!-- Check Your Understanding --> -->\n\n<!-- ::: {.callout-tip icon=false title=\"Check Your Understanding\"} -->\n\n<!-- -   Use the 12-month centered moving average computed above to calculate the estimated monthly multiplictive effect. -->\n<!-- -   Question1 -->\n<!-- -   Question2 -->\n\n<!-- ::: -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- **Calculate Mean Crime Incidents Monthly by Year** -->\n\n<!-- ```{r} -->\n<!-- # Calculate mean annual total incidents -->\n<!-- crime_annual_ts <- crime_tsibble |> -->\n<!--   index_by(year = year(dates)) |> -->\n<!--   summarise(value = mean(incidents)) -->\n\n<!-- # Plot mean annual total incidents using autoplot -->\n<!-- autoplot(crime_annual_ts, .vars = value) + -->\n<!--   labs( -->\n<!--     x = \"Year\", -->\n<!--     y = \"Mean Daily Crime Incidents\", -->\n<!--     title = \"Mean Daily Crime Incidents\" -->\n<!--   ) + -->\n<!--   theme(plot.title = element_text(hjust = 0.5)) -->\n<!-- ``` -->\n\n\n<!-- **Monthly Boxplots of Total Crime Incidents** -->\n\n<!-- ```{r} -->\n<!-- # Create boxplots -->\n<!-- ggplot(crime_tsibble, aes(x = as.factor(month), y = incidents)) + -->\n<!--   geom_boxplot() + -->\n<!--   labs( -->\n<!--     x = \"Month\", -->\n<!--     y = \"Total Crime Incidents\", -->\n<!--     title = \"Boxplots of Total Crime Incidents by Month\" -->\n<!--   ) + -->\n<!--   theme(plot.title = element_text(hjust = 0.5)) -->\n<!-- ``` -->\n\n\n\n<!-- ## Estimating the Trend: Moving Average (5 min) -->\n\n<!-- ```{r} -->\n<!-- # Create a daily plot -->\n<!-- dp <- autoplot(crime_tsibble, .vars = incidents) + -->\n<!--     labs( -->\n<!--       x = \"Month\", -->\n<!--       y = \"Total Crime Incidents\", -->\n<!--       title = \"Total Crime Incidents Over Time\" -->\n<!--     ) + -->\n<!--     theme(plot.title = element_text(hjust = 0.5)) -->\n\n<!--   # Calculate mean monthly total incidents -->\n<!--   mean_monthly_incidents <- crime_tsibble |> -->\n<!--     as.data.frame() |> -->\n<!--     group_by(year, month) |> -->\n<!--     summarize(value = mean(incidents)) |> -->\n<!--   mutate(index = tsibble::yearmonth( mdy(paste0(month, \"/15/\", year)) )) |> -->\n<!--   as_tsibble(index = index) -->\n\n<!--   # Calculate mean annual total incidents -->\n<!--   mean_annual_incidents <- crime_tsibble |> -->\n<!--     as.data.frame() |> -->\n<!--     group_by(year) |> -->\n<!--     summarize(value = mean(incidents)) |> -->\n<!--   mutate(index = tsibble::yearmonth( mdy(paste0(\"7/1/\",year)) )) |> -->\n<!--   as_tsibble(index = index) -->\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- # Create a yearly plot -->\n<!--   yp <- ggplot(mean_annual_incidents, aes(x = year, y = value)) + -->\n<!--     geom_line() + -->\n<!--     labs( -->\n<!--       x = \"Year\", -->\n<!--       y = \"Mean Total Crime Incidents\", -->\n<!--       title = \"Annual Mean Total Crime Incidents\" -->\n<!--     ) + -->\n<!--     scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) + -->\n<!--     theme(plot.title = element_text(hjust = 0.5)) -->\n\n<!-- # Create a monthly plot -->\n<!--   mp <- ggplot(mean_monthly_incidents, aes(x = index, y = value)) + -->\n<!--     geom_line() + -->\n<!--     labs( -->\n<!--       x = \"Year\", -->\n<!--       y = \"Mean Total Crime Incidents\", -->\n<!--       title = \"Monthly Mean Total Crime Incidents\" -->\n<!--     ) + -->\n<!--     # scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) + -->\n<!--     theme(plot.title = element_text(hjust = 0.5)) -->\n\n<!--   # Display both simultaneously -->\n<!--   dp / mp -->\n<!--   dp / yp -->\n\n<!-- ``` -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Small Group Activity: Decomposition of Baltimore Crime Data (20 min)\n\n### Background \n\nThe City of Baltimore publishes crime data, which can be accessed through a query. \nThis dataset is sourced from the City of Baltimore Open Data and is updated monthly. \nYou can explore the data on [data.world](https://data.world/data-society/city-of-baltimore-crime-data).\n\nUse the following code to import the data:\n\n\n<!-- **Packages** -->\n<!-- ```{r, warning=FALSE} -->\n<!-- # library(dplyr) -->\n<!-- # library(tidyr) -->\n<!-- # library(ggplot2) -->\n<!-- # library(tidyverse) -->\n<!-- # library(dygraphs) -->\n<!-- # library(tidyquant) -->\n<!-- # library(forecast) -->\n<!-- ``` -->\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncrime_df <- rio::import(\"https://byuistats.github.io/timeseries/data/baltimore_crime.csv\")\n#crime_df <- rio::import(\"data/baltimore_crime.parquet\")\n```\n:::\n\n\n\n\n\nThe data set consists of 285807 rows and 12 columns. \nThere are a few key variables:\n\n- **Date and Time:** Records the date and time of each incident.\n- **Location:** Detailed coordinates of each incident.\n- **Crime Type:** Description of the type of crime.\n\nWhen exploring a new time series, it is crucial to carefully examine the data. Here are a few rows of the original data set. \n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> CrimeDate </th>\n   <th style=\"text-align:center;\"> CrimeTime </th>\n   <th style=\"text-align:center;\"> CrimeCode </th>\n   <th style=\"text-align:center;\"> Location </th>\n   <th style=\"text-align:center;\"> Description </th>\n   <th style=\"text-align:center;\"> Inside.Outside </th>\n   <th style=\"text-align:center;\"> Weapon </th>\n   <th style=\"text-align:center;\"> Post </th>\n   <th style=\"text-align:center;\"> District </th>\n   <th style=\"text-align:center;\"> Neighborhood </th>\n   <th style=\"text-align:center;\"> Location.1 </th>\n   <th style=\"text-align:center;\"> Total.Incidents </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 02:35:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 3B </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 300 SAINT PAUL PL </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ROBBERY - STREET </td>\n   <td style=\"text-align:center;min-width: 0in; \"> O </td>\n   <td style=\"text-align:center;min-width: 0in; \">  </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 111 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> CENTRAL </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Downtown </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.2924100000, -76.6140800000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 02:56:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 3CF </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 800 S BROADWAY </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ROBBERY - COMMERCIAL </td>\n   <td style=\"text-align:center;min-width: 0in; \"> I </td>\n   <td style=\"text-align:center;min-width: 0in; \"> FIREARM </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 213 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> SOUTHEASTERN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Fells Point </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.2824200000, -76.5928800000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 03:00:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 6D </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1500 PENTWOOD RD </td>\n   <td style=\"text-align:center;min-width: 0in; \"> LARCENY FROM AUTO </td>\n   <td style=\"text-align:center;min-width: 0in; \"> O </td>\n   <td style=\"text-align:center;min-width: 0in; \">  </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 413 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> NORTHEASTERN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Stonewood-Pentwood-Winston </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.3480500000, -76.5883400000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 03:00:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 6D </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 6600 MILTON LN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> LARCENY FROM AUTO </td>\n   <td style=\"text-align:center;min-width: 0in; \"> O </td>\n   <td style=\"text-align:center;min-width: 0in; \">  </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 424 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> NORTHEASTERN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Westfield </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.3626300000, -76.5516100000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 03:00:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 6E </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 300 W BALTIMORE ST </td>\n   <td style=\"text-align:center;min-width: 0in; \"> LARCENY </td>\n   <td style=\"text-align:center;min-width: 0in; \"> O </td>\n   <td style=\"text-align:center;min-width: 0in; \">  </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 111 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> CENTRAL </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Downtown </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.2893800000, -76.6197100000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 11/12/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 03:00:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 4E </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 6900 MCCLEAN BLVD </td>\n   <td style=\"text-align:center;min-width: 0in; \"> COMMON ASSAULT </td>\n   <td style=\"text-align:center;min-width: 0in; \"> I </td>\n   <td style=\"text-align:center;min-width: 0in; \"> HANDS </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 423 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> NORTHEASTERN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Hamilton Hills </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.3707000000, -76.5670900000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2011 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 23:38:00 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 4D </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 800 N FREMONT AV </td>\n   <td style=\"text-align:center;min-width: 0in; \"> AGG. ASSAULT </td>\n   <td style=\"text-align:center;min-width: 0in; \"> I </td>\n   <td style=\"text-align:center;min-width: 0in; \"> HANDS </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 123 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> WESTERN </td>\n   <td style=\"text-align:center;min-width: 0in; \"> Upton </td>\n   <td style=\"text-align:center;min-width: 0in; \"> (39.2981200000, -76.6339100000) </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n<!-- Check Your Understanding -->\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n-   Using the command `crime_df |> summary()`, we learn that the `Total.Incidents` always equals 1. What does each row in the data frame represent?\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Data Summary and Aggregation\n# Group by dates column and summarize from Total.Incidents column\ndaily_summary_df <- crime_df |>\n  rename(dates = CrimeDate) |>\n  group_by(dates) |>\n  summarise(incidents = sum(Total.Incidents))\n\n\n# Data Transformation and Formatting\n# Select relevant columns, format dates, and arrange the data\ncrime_data <- daily_summary_df |>\n  mutate(dates = mdy(dates)) |>\n  mutate(\n    month = month(dates),\n    day = day(dates),\n    year = year(dates)\n  ) |>\n  dplyr::select(dates, month, day, year, incidents) |>\n  arrange(dates)\n\n# Convert formatted data to a tsibble with dates as the index\ncrime_tsibble <- as_tsibble(crime_data, index = dates)\n```\n:::\n\n\nHere are a few rows of the summarized data.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> dates </th>\n   <th style=\"text-align:center;\"> incidents </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2011 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 185 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2012 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 176 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2013 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 157 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2014 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 139 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2015 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 157 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 01/01/2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 148 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n   <td style=\"text-align:center;min-width: 0in; \"> ⋮ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 12/31/2013 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 128 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 12/31/2014 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 108 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 12/31/2015 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 97 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nThe following table summarizes the number of days in each month for which crime data were reported.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncrime_data |>\n  mutate(month_char = format(as.Date(dates), '%b') ) |>\n  group_by(month, month_char, year) |>\n  summarise(n = n(), .groups = \"keep\") |>\n  group_by() |>\n  arrange(year, month) |>\n  dplyr::select(-month) |>\n  rename(Year = year) |>\n  pivot_wider(names_from = month_char, values_from = n) |>\n  display_table()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Year </th>\n   <th style=\"text-align:center;\"> Jan </th>\n   <th style=\"text-align:center;\"> Feb </th>\n   <th style=\"text-align:center;\"> Mar </th>\n   <th style=\"text-align:center;\"> Apr </th>\n   <th style=\"text-align:center;\"> May </th>\n   <th style=\"text-align:center;\"> Jun </th>\n   <th style=\"text-align:center;\"> Jul </th>\n   <th style=\"text-align:center;\"> Aug </th>\n   <th style=\"text-align:center;\"> Sep </th>\n   <th style=\"text-align:center;\"> Oct </th>\n   <th style=\"text-align:center;\"> Nov </th>\n   <th style=\"text-align:center;\"> Dec </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2011 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 28 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2012 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 29 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2013 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 28 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2014 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 28 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2015 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 28 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;min-width: 0in; \"> 2016 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 29 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 30 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 31 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> 12 </td>\n   <td style=\"text-align:center;min-width: 0in; \"> NA </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n<!-- Check Your Understanding -->\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n-   What do you observe about the data?\n-   What are some problems that could arise from incomplete data?\n-   How do you recommend we address the missing data?\n\n:::\n\nHere is a time plot of the number of crimes reported in Baltimore daily.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Time series plot of total incidents over time\ncrime_plot <- autoplot(crime_tsibble, .vars = incidents) +\n  labs(\n    x = \"Time\",\n    y = \"Total Crime Incidents\",\n    title = \"Total Crime Incidents Over Time\"\n  ) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Display the plot\ncrime_plot\n```\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n<!-- Check Your Understanding -->\n\n::: {.callout-tip icon=false title=\"Check Your Understanding\"}\n\n-   What do you notice about this time plot?\n    - Describe the trend\n    - Is there evidence of seasonality?\n    - Is the additive or multiplicative model appropriate?\n    - Which date has the highest number of recorded crimes? Can you determine a reason for this spike?\n\n:::\n\n### Monthly Summary\n\nWe could analyze the data at the daily level, but for simplicity we will model the monthly totals.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncrime_monthly_ts <- crime_tsibble |>\n  index_by(month_year = floor_date(as_date(dates), \"month\")) |>\n  summarise(value = sum(incidents))\n\n# Plot mean annual total incidents using autoplot\nautoplot(crime_monthly_ts, .vars = value) +\n  labs(\n    x = \"Year\",\n    y = \"Total Monthly Crime Incidents\",\n  ) +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](chapter_3_lesson_3-copy_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nThere is incomplete data for 2016, as data were not provided after 11/12/2016. We will only consider data through January 2016.\n<!-- ~ -->\n<!-- This is hard-coded.. -->\nWe will omit any data after October 2016.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncrime_monthly_ts <- crime_monthly_ts |>\n  filter(month_year < mdy(\"10/31/2016\"))\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- ## TO BE CONTINUED.... -->\n\n\n\n\n\n\n\n\n\n\n## Homework Preview (5 min)\n\n-   Review upcoming homework assignment\n-   Clarify questions\n\n\n::: {.callout-note icon=false}\n\n## Download Homework\n\n<a href=\"https://byuistats.github.io/timeseries/homework/homework_3_3.qmd\" download=\"homework_3_3.qmd\"> homework_3_3.qmd </a>\n\n:::\n\n\n\n\n\n\n\n\n\n\n<a href=\"javascript:showhide('Solutions0')\"\nstyle=\"font-size:.8em;\">Balitmore Crime Time Plot</a>\n\n::: {#Solutions0 style=\"display:none;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Dates with high criminal activity\ncrime_data |> arrange(desc(incidents)) |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  dates      month   day  year incidents\n  <date>     <dbl> <int> <dbl>     <int>\n1 2015-04-27     4    27  2015       419\n2 2016-06-05     6     5  2016       254\n3 2011-10-14    10    14  2011       199\n4 2011-07-30     7    30  2011       193\n5 2013-06-22     6    22  2013       192\n6 2013-12-20    12    20  2013       192\n```\n\n\n:::\n:::\n\n\nOn April 27, 2015, 419 crimes were recorded. These are associated with protests over arrest of Freddie Gray.\n:::\n\n\n\n\n\n\n\n\n\n<a href=\"javascript:showhide('Solutions')\"\nstyle=\"font-size:.8em;\">Class Activity</a>\n\n::: {#Solutions style=\"display:none;\"}\n\nSolutions to Class Activity\n\n\n::: {.cell}\n\n:::\n\n\n:::\n\n\n\n## References\n\n-   C. C. Holt (1957) Forecasting seasonals and trends by exponentially weighted moving averages, ONR Research Memorandum, Carnegie Institute of Technology 52. (reprint at https://doi.org/10.1016/j.ijforecast.2003.09.015).\n-   P. R. Winters (1960). Forecasting sales by exponentially weighted moving averages. Management Science, 6, 324--342. 10.1287/mnsc.6.3.324.",
    "supporting": [
      "chapter_3_lesson_3-copy_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}